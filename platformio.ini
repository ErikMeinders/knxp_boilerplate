; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = knxp-esp8266-dev
workspace_dir = .pio.nosync     ; use .nosync to avoid upload to iCloud on macOS

[env]
framework = arduino
monitor_speed = 115200
lib_deps =
    knx_platformio @ 0.6.11

build_flags = 
    -DMASK_VERSION=0x57B0       ; Fixed version number
    -DNOHEARTBEAT               ; Disable external WatchDog
    ; -DPIN_HEARTBEAT=4         ; For external WatchDog
    ; -DNO_OTA                  ; Disable OTA
    ; -DNO_NTP                  ; Disable NTP
    ; -DNO_TELNET               ; Disable Telnet
    ; -DSTDIO_TELNET            ; Use Telnet for stdio
    ; -DNO_HTTP                 ; Disable WebServer
    ; -DHOSTNAME='"knxp-thing"' ; Hostname for OTA, Telnet and WebServer
    -Wno-unknown-pragmas
    -Wno-unused-function
    -Wno-register
    -Wno-deprecated-declarations
    -I include                  ; Add include folder to search path
                                ; Library also needs to peek in this folder!

check_skip_packages = true

; -- DEVELOPMENT --

[dev]
build_flags =
    ${env.build_flags}
    -DHOSTNAME='"knxp-thing-dev"'
    -DNO_OTA
    -DNO_TELNET
    -DNO_HTTP

; -- PRODUCTION --

[prd]
build_flags =
    ${env.build_flags}
    -DHOSTNAME='"knxp-thing"'
    -DSTDIO_TELNET
    -DNO_HTTP

; ==== ESP8266 ====

[knxp-esp8266]
platform = espressif8266
board = d1
lib_ldf_mode = deep+

[env:knxp-esp8266-dev]
extends = knxp-esp8266, dev
upload_protocol = esptool

[env:knxp-esp8266-prod]
extends = knxp-esp8266, prd
upload_protocol = espota
upload_port = knxp-thing.local


; ==== ESP32 ====

[knxp-esp32]
platform = espressif32
board = wemos_d1_mini32
lib_ldf_mode = deep+

[env:knxp-esp32-dev]
extends = knxp-esp32, dev
upload_protocol = esptool

[env:knxp-esp32-prod]
extends = knxp-esp32, prd
upload_protocol = espota
upload_port = knxp-thing.local
